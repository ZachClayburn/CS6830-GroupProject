/*
 * This Java source file was generated by the Gradle 'init' task.
 *  Nathanael Smith -- December 14
 */

package testApplication;

public class LibraryComplex {

    public String nullError_1(Integer number) {
        // The solution should be the following:
        // String success = new String();
        // if (number != number){
        //    success = number.toString();
        // }
        String success = number.toString();
        return success;
    }

    public boolean compareError_1(int t) {
        // This function is contrived to fail whenever t%5 == 0.
        // There are 5 tests in LibraryTestComplex
        t = t % 5;
        int a = 3;
        int b = 4;
        boolean c = false;

        if (t == 0){
            // could be a <= b or a < b
            c = a > b;
        }
        else if (t == 1){
            c = a < b;
        }
        else if (t == 2){
            c = a < b;
        }
        else if (t == 3){
            c = a < b;
        }
        else if (t == 4) {
            c = a < b;
        }
        return c;
    }

    public boolean arithmeticError_1(int t) {
        // This test will fail if t%4 != 0
        t = t % 4;
        int a = 13;
        int b = 7;
        int c = 0;
        if (t == 0){
            // should be a * b
            c = a - b;
        }
        else if (t == 1){
            c = a * b;
        }
        else if (t == 2){
            // should be a * b
            c = a / b;
        }
        else if (t == 3){
            // should be a * b
            c = a + b;
        }
        return c == 91;
    }

    public boolean bitwiseError_1(int t) {
        t = t % 3;
        int a = 5;
        int b = 3;
        int c = 0;
        if (t == 0){
            // should be a | b
            c = (a & b);
        }
        else if (t == 1){
            c = a | b;

        }
        else if (t == 2){
            c = a | b;

        }
        return c == 7;
    }

    public boolean negationError_1(int t){
        // fluff code
        int a = t % 9;
        int b = 11;
        int c = 0;
        c = (b - a) * 3;
        if (a < 0){
            String s = "This line should never run...";
        }
        // Fix below
        int d = c % 2;
        boolean x = false;
        if (x){
            // should be  !x.  The above line is the correct place to fix
            return true;
        }
        else if (d != 0) {
            // !d is an incorrect fix.  Sometimes it will pass tests and sometimes fail
            return true;
        }
        else {
            return false;
        }
    }

    public boolean deleteLineError_1(int t) {
        t = t % 6;
        int a = 2;
        int b = 3;
        int c = 5;
        int d;
        if ( t == 0){
            // Should delete next line
            c += a + b;
            return c == 5;
        }
        // other false lines that if deleted don't fix code
        else if ( t == 1 ){
            d = a + b;
            return c == 5;
        }
        else if ( t == 2 ){
            d = a + b;
            return c == 5;
        }
        else if ( t == 3 ){
            d = a * b;
            return c == 5;
        }
        else if ( t == 4 ){
            d = a / b;
            return c == 5;
        }
        else if ( t == 5 ){
            d = a - b;
            return c == 5;
        }
        return false; // No idea what was supposed to be returned here, but it cannot reach the end of the function without a return
    }

}

